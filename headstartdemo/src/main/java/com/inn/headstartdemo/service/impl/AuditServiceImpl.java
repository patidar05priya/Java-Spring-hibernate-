
package com.inn.headstartdemo.service.impl;

import java.text.ParseException;
import java.util.List;

import org.json.JSONException;
import org.json.JSONObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;
import javax.persistence.NoResultException;
import com.inn.headstartdemo.audit.NonAuditable;
import com.inn.headstartdemo.dao.IAuditDao;

import com.inn.headstartdemo.model.Audit;
import com.inn.headstartdemo.service.IAuditService;
import com.inn.headstartdemo.service.generic.AbstractService;
import com.inn.headstartdemo.exceptions.ValueNotFoundException;
import  com.inn.headstartdemo.exceptions.application.BusinessException;
import  com.inn.headstartdemo.exceptions.application.ValidationFailedException;
import org.springframework.dao.DataIntegrityViolationException;
import org.springframework.dao.EmptyResultDataAccessException;
/**
 * 
 * @author Auto Generated By HeadStart
 * @version 1.0
 *
 */
 
/**
 * 
 *Audit Service 
 *
 */

@Service("auditService")
public class AuditServiceImpl extends AbstractService<Long, Audit>  implements IAuditService
{
	/** The audit dao */
	private IAuditDao	auditDAO;
	
	@Autowired
	public AuditServiceImpl(IAuditDao auditDao)
	{
		super.setDao(auditDao);
		this.auditDAO = auditDao;
	}
	
	/**
	 * 
	 *method to create audit 
	 *@parameter audit Audit
	 * 
	 */
	@Transactional(propagation=Propagation.REQUIRES_NEW)
	@NonAuditable
	public void doAudit(final Audit audit)
	{
		auditDAO.create(audit);
	}

    /**
	 * 
	 *Returns the audit search record finding by criteria 
	 *@parameter criteria of type JSONObject 
	 *@returns a list of record
	 * 
	 */
	@Override
	public List<Audit> auditSearch(JSONObject criteria) throws  ValueNotFoundException,JSONException, ParseException {
		return auditDAO.search(criteria);
	}

    /**
	 * 
	 *Returns the list of logged users
	 *@throws ValueNotFoundException
	 *@returns a list of record
	 * 
	 */
	@Override
	public List<Audit> getLoggedInUsers() throws ValueNotFoundException
	{
		return auditDAO.getLoggedInUsers();
	}
	public Long getTotalCount(){
		return auditDAO.getTotalCount();
}	
	
}
