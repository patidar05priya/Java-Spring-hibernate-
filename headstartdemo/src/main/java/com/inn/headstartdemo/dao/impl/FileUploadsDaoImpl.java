package com.inn.headstartdemo.dao.impl;

import com.inn.headstartdemo.model.FileUploads;
import java.lang.Integer;

import java.util.List;
import com.inn.headstartdemo.dao.annotation.Dao;
import com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao;
import com.inn.headstartdemo.dao.IFileUploadsDao;
import org.springframework.dao.DataAccessException;
import javax.validation.Valid;

/**
 * 
 * @author Auto Generated By HeadStart
 * @version 1.0
 *
 */
/**
 * 
 * FileUploadsDao
 *
 */
@Dao
public class FileUploadsDaoImpl extends HibernateGenericDao<Integer, FileUploads> implements IFileUploadsDao {

	/**
	 * Instantiates a new fileUploads dao impl.
	 */
	public FileUploadsDaoImpl() {
		super(FileUploads.class);
	}

	/**
	 * 
	 *Returns the new FileUploads record
	 *@parameter valid FileUploads entity
	 *@returns a new FileUploads record
	 * 
	 */	
	@Override
	public FileUploads create(@Valid FileUploads anEntity)throws DataAccessException {
		return super.create(anEntity);
	}

	/**
	 * 
	 *Returns the updated FileUploads record
	 *@parameter valid FileUploads entity
	 *@returns a updated FileUploads record
	 * 
	 */	
	@Override
	public FileUploads update(@Valid FileUploads anEntity) throws DataAccessException{
		return super.update(anEntity);
	}

	/**
	 * 
	 *Returns the removed FileUploads record
	 *@parameter entity of type FileUploads
	 * 
	 */
	@Override
	public void delete(FileUploads anEntity) throws DataAccessException{
		super.delete(anEntity);
	}
	
	/**
	 * 
	 *Returns the removed FileUploads record by primary key
	 *@parameter primary key of type Integer  
	 * 
	 */
	@Override
	public void deleteByPk(Integer entityPk) throws DataAccessException{
		super.deleteByPk(entityPk);
	}
	
	/**
	 * 
	 *Returns the list of all FileUploads
	 *@returns a list of FileUploads
	 * 
	 */
	@Override
	public List<FileUploads> findAll() throws DataAccessException{
		return super.findAll();
	}
	
	/**
	 * 
	 *Returns the FileUploads entity finding by id
	 *@parameter id of type Integer
	 *@returns a FileUploads record 
	 * 
	 */	
	@Override
	public FileUploads findByPk(Integer entityPk) throws DataAccessException{
		return super.findByPk(entityPk);
	}

}
