package com.inn.headstartdemo.dao.impl;

import  com.inn.headstartdemo.model.CustomerAttach;
import java.lang.Long;
import java.lang.Integer;
import java.io.InputStream;

import java.util.List;
import com.inn.headstartdemo.dao.annotation.Dao;
import com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao;
import com.inn.headstartdemo.dao.ICustomerAttachDao;
import org.springframework.dao.DataAccessException;

/**
 * 
 * @author Auto Generated By HeadStart
 * @version 1.0
 *
 */
/**
 * 
 *EntityAttach Dao 
 * 
 */
@Dao
public class CustomerAttachDaoImpl extends HibernateGenericDao<Integer, CustomerAttach> implements ICustomerAttachDao {

	/**
	 * Instantiates a new CustomerAttach dao.
	 */
	public CustomerAttachDaoImpl() {
		super(CustomerAttach.class);
	}
	/**
	 * 
	 *Returns the new CustomerAttach record
	 *@parameter customerAttach of type  CustomerAttach
	 *@throws DataAccessException
	 *@returns a new CustomerAttach
	 * 
	 */
	@Override
	public CustomerAttach create(CustomerAttach customerAttach)throws DataAccessException {
		return super.create(customerAttach);
	}

	/**
	 * 
	 *Returns the updated CustomerAttach record
	 *@parameter customerAttach of type  CustomerAttach
	 *@throws DataAccessException
	 *@returns a updated CustomerAttach record
	 * 
	 */
	@Override
	public CustomerAttach update(CustomerAttach customerAttach)throws DataAccessException {
		return super.update(customerAttach);
	}

	/**
	 * 
	 *Method to delete CustomerAttach record
	 *@parameter anEntity of type  CustomerAttach
	 *@throws DataAccessException
	 * 
	 */
	@Override
	public void delete(CustomerAttach customerAttach)throws DataAccessException {
		super.delete(customerAttach);
	}

    /**
	 * 
	 *Method to delete CustomerAttach record by primary key
	 *@parameter primary key of type Integer  
	 *@throws DataAccessException
	 * 
	 */
	@Override
	public void deleteByPk(Integer integerPk)throws DataAccessException {
		super.deleteByPk(integerPk);
	}

    /**
	 * 
	 *Returns the list of CustomerAttach record 
	 *@returns  CustomerAttach record
	 *@throws DataAccessException
	 * 
	 */
	@Override
	public List<CustomerAttach> findAll()throws DataAccessException {
		return super.findAll();
	}

    /**
	 * 
	 *Returns  the record of CustomerAttach  finding by primary key 
	 *@parameter primary key  of type Integer
	 *@throws DataAccessException
	 *@returns a CustomerAttach record
	 * 
	 */
	@Override
	public CustomerAttach findByPk(Integer integerPk)throws DataAccessException {
		return super.findByPk(integerPk);
	}

}
