package com.inn.headstartdemo.model;

import javax.persistence.*;
import javax.persistence.GeneratedValue;
import java.io.Serializable;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.hibernate.envers.Audited;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import com.inn.headstartdemo.utils.BaseEntity;
import javax.xml.bind.annotation.XmlRootElement;
import org.hibernate.validator.constraints.Length;

/**
 * Auto-generated by:
 * org.apache.openjpa.jdbc.meta.ReverseMappingTool$AnnotatedCodeGenerator
 */
@XmlRootElement(name="Orderdetail") @JsonIgnoreProperties(value={"hibernateLazyInitializer","handler"}) @Audited @Entity
@Table(name="orderdetail")
public class Orderdetail extends BaseEntity implements Serializable {
	@GeneratedValue(strategy=javax.persistence.GenerationType.AUTO) @Id
	@Column(columnDefinition="INT")
	private Integer id;

	@Basic
	@Column(nullable=false)
	private Integer orderLineNumber;

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="orderNumber", columnDefinition="INT", nullable=false)
	private Orders orders;

	@Basic
	@Column(nullable=false)
	private Double priceEach;

	@ManyToOne(fetch=FetchType.LAZY)
	@JoinColumn(name="productCode", columnDefinition="INT UNSIGNED", nullable=false)
	private Product product;

	@Basic
	@Column(columnDefinition="INT", nullable=false)
	private Integer quantityOrdered;


	public Orderdetail() {
	}

	public Orderdetail(Integer id) {
		this.id = id;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public Integer getOrderLineNumber() {
		return orderLineNumber;
	}

	public void setOrderLineNumber(Integer orderLineNumber) {
		this.orderLineNumber = orderLineNumber;
	}

	public Orders getOrders() {
		return orders;
	}

	public void setOrders(Orders orders) {
		this.orders = orders;
	}

	public Double getPriceEach() {
		return priceEach;
	}

	public void setPriceEach(Double priceEach) {
		this.priceEach = priceEach;
	}

	public Product getProduct() {
		return product;
	}

	public void setProduct(Product product) {
		this.product = product;
	}

	public Integer getQuantityOrdered() {
		return quantityOrdered;
	}

	public void setQuantityOrdered(Integer quantityOrdered) {
		this.quantityOrdered = quantityOrdered;
	}

	public boolean equals(Object obj) {
		boolean returnValue = false;
		if (obj instanceof Orderdetail) {
			Orderdetail orderdetail = (Orderdetail) obj;
			EqualsBuilder equalsBuilder = new EqualsBuilder();
			equalsBuilder.append(id, orderdetail.getId());
			equalsBuilder.append(orderLineNumber, orderdetail.getOrderLineNumber());
			equalsBuilder.append(orders, orderdetail.getOrders());
			equalsBuilder.append(priceEach, orderdetail.getPriceEach());
			equalsBuilder.append(product, orderdetail.getProduct());
			equalsBuilder.append(quantityOrdered, orderdetail.getQuantityOrdered());
			returnValue = equalsBuilder.isEquals();
		}
		return returnValue;
	}

	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

	public int hashCode() {
		HashCodeBuilder hashCodeBuilder = new HashCodeBuilder(17, 37);
		hashCodeBuilder.append(id);
		hashCodeBuilder.append(orderLineNumber);
		hashCodeBuilder.append(orders);
		hashCodeBuilder.append(priceEach);
		hashCodeBuilder.append(product);
		hashCodeBuilder.append(quantityOrdered);
		return hashCodeBuilder.toHashCode();
	}

	@org.codehaus.jackson.annotate.JsonIgnore
	public String getPrimaryKeyIdentifier() {
		return id.toString();
	}
}