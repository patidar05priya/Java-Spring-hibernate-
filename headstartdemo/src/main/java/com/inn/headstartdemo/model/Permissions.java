package com.inn.headstartdemo.model;

import javax.persistence.*;
import java.io.Serializable;
import org.apache.commons.lang.builder.ToStringBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.EqualsBuilder;
import javax.xml.bind.annotation.XmlRootElement;
import org.codehaus.jackson.annotate.JsonIgnoreProperties;
/**
 * 
 * @author Auto Generated By HeadStart
 * @version 1.0
 *
 */
@XmlRootElement(name="Permissions") @Entity
@Table(name="permissions")
 @JsonIgnoreProperties(value={"hibernateLazyInitializer","handler"})
public class Permissions implements Serializable {
	@Basic
	@Column(nullable=false, length=200)
	private String description;

	@Id
	    @GeneratedValue(strategy = GenerationType.AUTO)
	 	private Long permissionid;

	@Basic
	@Column(nullable=false, length=50)
	private String permissionname;


	public Permissions() {
	}

	public Permissions(Long permissionid) {
		this.permissionid = permissionid;
	}

	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	public Long getPermissionid() {
		return permissionid;
	}

	public void setPermissionid(Long permissionid) {
		this.permissionid = permissionid;
	}

	public String getPermissionname() {
		return permissionname;
	}

	public void setPermissionname(String permissionname) {
		this.permissionname = permissionname;
	}

	public boolean equals(Object obj) {
		boolean returnValue = false;
		if (obj instanceof Permissions) {
			Permissions permissions = (Permissions) obj;
			EqualsBuilder equalsBuilder = new EqualsBuilder();
			equalsBuilder.appendSuper(super.equals(obj));
			equalsBuilder.append(description, permissions.getDescription());
			equalsBuilder.append(permissionid, permissions.getPermissionid());
			equalsBuilder.append(permissionname, permissions.getPermissionname());
			returnValue = equalsBuilder.isEquals();
		}
		return returnValue;
	}

	public String toString() {
		return ToStringBuilder.reflectionToString(this);
	}

	public int hashCode() {
		HashCodeBuilder hashCodeBuilder = new HashCodeBuilder(17, 37);
		hashCodeBuilder.append(description);
		hashCodeBuilder.append(permissionid);
		hashCodeBuilder.append(permissionname);
		return hashCodeBuilder.toHashCode();
	}
}
