package com.inn.headstartdemo.security.authentication;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.GrantedAuthority;
/**
 * 
 * @author Auto Generated By HeadStart
 * @version 1.0
 * AdvAuthenticationToken serves as the Adapter
 * for the original authentication token. Whenever default
 * functionality is desired we would delegate it to the adaptiveAuthenticationToken.
 * In case we require storing the domain name etc. we would set it over here. 
 */

public class DomainAuthenticationToken extends UsernamePasswordAuthenticationToken{
	
	/**
	 * default serial version uid
	 */
	private static final long serialVersionUID = 1L;

	
	private String domainName = null;
	private Integer userid;
	
	public Integer getUserid() {
		return userid;
	}

	public void setUserid(Integer userid) {
		this.userid = userid;
	}
	
	public String getDomainName() {
		return domainName;
	}

	public void setDomainName(String domainName) {
		this.domainName = domainName;
	}

	public DomainAuthenticationToken(Object principal,Object credentials,Collection<GrantedAuthority> authorities){
		super(principal,credentials,authorities);
	}
	
	public DomainAuthenticationToken(String username,String password ){		
		super(username,password);
			}

	
}
