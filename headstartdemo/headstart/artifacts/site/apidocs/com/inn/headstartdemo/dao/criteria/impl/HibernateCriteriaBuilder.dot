#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.utils.QueryObject
	c66884 [label=<<table title="com.inn.headstartdemo.utils.QueryObject" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../utils/QueryObject.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> QueryObject </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + addValueForFilterWrapper(wrapper : SearchFilterWrapper) </td></tr>
<tr><td align="left" balign="left"> + getSearchFilterWrapperList() : List&lt;SearchFilterWrapper&gt; </td></tr>
<tr><td align="left" balign="left"> + getPaginationUpperLimit() : int </td></tr>
<tr><td align="left" balign="left"> + getPaginationLowerLimit() : int </td></tr>
<tr><td align="left" balign="left"> + getValueByFieldName(key : String) : Object </td></tr>
<tr><td align="left" balign="left"> + setValueForFieldName(fieldName : String, object : Object) </td></tr>
<tr><td align="left" balign="left"> + getModeByFieldName(key : String) : QueryObject.SearchMode </td></tr>
<tr><td align="left" balign="left"> + setModeForFieldName(fieldName : String, mode : QueryObject.SearchMode) </td></tr>
<tr><td align="left" balign="left"> + addOrderingClause(fieldName : String, order : QueryObject.SortOrder) </td></tr>
<tr><td align="left" balign="left"> + getFieldNameModeMapping() : Map&lt;String, QueryObject.SearchMode&gt; </td></tr>
<tr><td align="left" balign="left"> + setFieldNameModeMapping(fieldNameModeMapping : Map&lt;String, QueryObject.SearchMode&gt;) </td></tr>
<tr><td align="left" balign="left"> + getFieldNameValueMapping() : Map&lt;String, Object&gt; </td></tr>
<tr><td align="left" balign="left"> + setFieldNameValueMapping(fieldNameValueMapping : Map&lt;String, Object&gt;) </td></tr>
<tr><td align="left" balign="left"> + getOrderByMode() : Map&lt;String, QueryObject.SortOrder&gt; </td></tr>
<tr><td align="left" balign="left"> + setPaginationUpperLimit(paginationUpperLimit : int) </td></tr>
<tr><td align="left" balign="left"> + setPaginationLowerLimit(paginationLowerLimit : int) </td></tr>
<tr><td align="left" balign="left"> + setOrderByMode(orderByMode : Map&lt;String, QueryObject.SortOrder&gt;) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder<Entity>
	c66928 [label=<<table title="com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IQueryCriteriaBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IQueryCriteriaBuilder&lt;Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + buildCriteria(queryObject : QueryObject, entityClass : Class&lt;Entity&gt;) : Object </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder<Entity>
	c66930 [label=<<table title="com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HibernateCriteriaBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HibernateCriteriaBuilder&lt;Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + buildCriteria(queryObject : QueryObject, entityClass : Class&lt;Entity&gt;) : Criteria </td></tr>
<tr><td align="left" balign="left"> + getEntityManager() : EntityManager </td></tr>
<tr><td align="left" balign="left"> + setEntityManager(entityManager : EntityManager) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder<Entity> implements com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder<Entity>
	c66928:p -> c66930:p [dir=back,arrowtail=empty,style=dashed];
	// com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder<Entity> NAVASSOC org.slf4j.Logger
	c66930:p -> c66961:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder<Entity> DEPEND com.inn.headstartdemo.utils.QueryObject
	c66928:p -> c66884:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder<Entity> DEPEND org.hibernate.Criteria
	c66930:p -> c66962:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.criteria.impl.HibernateCriteriaBuilder<Entity> DEPEND com.inn.headstartdemo.utils.QueryObject
	c66930:p -> c66884:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.slf4j.Logger
	c66961 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.hibernate.Criteria
	c66962 [label=<<table title="org.hibernate.Criteria" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/hibernate/Criteria.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Criteria </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"> + setProjection(arg0 : Projection) : Criteria </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + addOrder(arg0 : Order) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFetchMode(arg0 : String, arg1 : FetchMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setLockMode(arg0 : LockMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setLockMode(arg0 : String, arg1 : LockMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : JoinType, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : int, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : JoinType, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : int, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setResultTransformer(arg0 : ResultTransformer) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setMaxResults(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFirstResult(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + isReadOnlyInitialized() : boolean </td></tr>
<tr><td align="left" balign="left"> + isReadOnly() : boolean </td></tr>
<tr><td align="left" balign="left"> + setReadOnly(arg0 : boolean) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFetchSize(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setTimeout(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheable(arg0 : boolean) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheRegion(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setComment(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFlushMode(arg0 : FlushMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheMode(arg0 : CacheMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + list() : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + scroll() : ScrollableResults </td></tr>
<tr><td align="left" balign="left"> + scroll(arg0 : ScrollMode) : ScrollableResults </td></tr>
<tr><td align="left" balign="left"> + uniqueResult() : Object </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

