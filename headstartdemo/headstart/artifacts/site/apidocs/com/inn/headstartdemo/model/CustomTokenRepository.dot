#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.model.CustomTokenRepository
	c46069 [label=<<table title="com.inn.headstartdemo.model.CustomTokenRepository" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./CustomTokenRepository.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CustomTokenRepository </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createNewToken(token : PersistentRememberMeToken) </td></tr>
<tr><td align="left" balign="left"> + updateToken(series : String, tokenValue : String, lastUsed : Date) </td></tr>
<tr><td align="left" balign="left"> + getTokenForSeries(seriesId : String) : PersistentRememberMeToken </td></tr>
<tr><td align="left" balign="left"> + removeUserTokens(username : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.ITokenDao
	c46132 [label=<<table title="com.inn.headstartdemo.dao.ITokenDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../dao/ITokenDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ITokenDao </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createNewToken(token : Token) </td></tr>
<tr><td align="left" balign="left"> + updateToken(series : String, tokenValue : String, lastUsed : Date) </td></tr>
<tr><td align="left" balign="left"> + getTokenForSeries(seriesId : String) : Token </td></tr>
<tr><td align="left" balign="left"> + removeUserTokens(username : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.model.CustomTokenRepository implements org.springframework.security.web.authentication.rememberme.PersistentTokenRepository
	c46181:p -> c46069:p [dir=back,arrowtail=empty,style=dashed];
	// com.inn.headstartdemo.model.CustomTokenRepository NAVASSOC org.slf4j.Logger
	c46069:p -> c46182:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.model.CustomTokenRepository NAVASSOC com.inn.headstartdemo.dao.ITokenDao
	c46069:p -> c46132:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.model.CustomTokenRepository DEPEND org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken
	c46069:p -> c46183:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken
	c46183 [label=<<table title="org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/security/web/authentication/rememberme/PersistentRememberMeToken.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PersistentRememberMeToken </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getUsername() : String </td></tr>
<tr><td align="left" balign="left"> + getSeries() : String </td></tr>
<tr><td align="left" balign="left"> + getTokenValue() : String </td></tr>
<tr><td align="left" balign="left"> + getDate() : Date </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.slf4j.Logger
	c46182 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.springframework.security.web.authentication.rememberme.PersistentTokenRepository
	c46181 [label=<<table title="org.springframework.security.web.authentication.rememberme.PersistentTokenRepository" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/springframework/security/web/authentication/rememberme/PersistentTokenRepository.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> PersistentTokenRepository </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createNewToken(arg0 : PersistentRememberMeToken) </td></tr>
<tr><td align="left" balign="left"> + updateToken(arg0 : String, arg1 : String, arg2 : Date) </td></tr>
<tr><td align="left" balign="left"> + getTokenForSeries(arg0 : String) : PersistentRememberMeToken </td></tr>
<tr><td align="left" balign="left"> + removeUserTokens(arg0 : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

