#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory
	c57896 [label=<<table title="com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HibernateAwareSerializerFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HibernateAwareSerializerFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createSerializer(serializationConfig : SerializationConfig, javaType : JavaType, beanProperty : BeanProperty) : JsonSerializer&lt;Object&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory extends org.codehaus.jackson.map.ser.BeanSerializerFactory
	c57970:p -> c57896:p [dir=back,arrowtail=empty];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory DEPEND org.codehaus.jackson.map.SerializationConfig
	c57896:p -> c57980:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory DEPEND org.codehaus.jackson.map.introspect.BasicBeanDescription
	c57896:p -> c57986:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory DEPEND org.codehaus.jackson.map.BeanProperty
	c57896:p -> c57987:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory DEPEND org.codehaus.jackson.map.JsonSerializer<T>
	c57896:p -> c57988:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory DEPEND org.codehaus.jackson.type.JavaType
	c57896:p -> c57989:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.codehaus.jackson.type.JavaType
	c57989 [label=<<table title="org.codehaus.jackson.type.JavaType" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/type/JavaType.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JavaType </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + withTypeHandler(arg0 : Object) : JavaType </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + withContentTypeHandler(arg0 : Object) : JavaType </font></td></tr>
<tr><td align="left" balign="left"> + narrowBy(arg0 : Class&lt;?&gt;) : JavaType </td></tr>
<tr><td align="left" balign="left"> + forcedNarrowBy(arg0 : Class&lt;?&gt;) : JavaType </td></tr>
<tr><td align="left" balign="left"> + widenBy(arg0 : Class&lt;?&gt;) : JavaType </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + narrowContentsBy(arg0 : Class&lt;?&gt;) : JavaType </font></td></tr>
<tr><td align="left" balign="left"> + setValueHandler(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + setTypeHandler(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> + getRawClass() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + hasRawClass(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isContainerType() : boolean </font></td></tr>
<tr><td align="left" balign="left"> + isAbstract() : boolean </td></tr>
<tr><td align="left" balign="left"> + isConcrete() : boolean </td></tr>
<tr><td align="left" balign="left"> + isThrowable() : boolean </td></tr>
<tr><td align="left" balign="left"> + isArrayType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isEnumType() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterface() : boolean </td></tr>
<tr><td align="left" balign="left"> + isPrimitive() : boolean </td></tr>
<tr><td align="left" balign="left"> + isFinal() : boolean </td></tr>
<tr><td align="left" balign="left"> + hasGenericTypes() : boolean </td></tr>
<tr><td align="left" balign="left"> + getKeyType() : JavaType </td></tr>
<tr><td align="left" balign="left"> + getContentType() : JavaType </td></tr>
<tr><td align="left" balign="left"> + containedTypeCount() : int </td></tr>
<tr><td align="left" balign="left"> + containedType(arg0 : int) : JavaType </td></tr>
<tr><td align="left" balign="left"> + containedTypeName(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> + getValueHandler() : T </td></tr>
<tr><td align="left" balign="left"> + getTypeHandler() : T </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + toCanonical() : String </font></td></tr>
<tr><td align="left" balign="left"> + getGenericSignature() : String </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getGenericSignature(arg0 : StringBuilder) : StringBuilder </font></td></tr>
<tr><td align="left" balign="left"> + getErasedSignature() : String </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getErasedSignature(arg0 : StringBuilder) : StringBuilder </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + toString() : String </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + equals(arg0 : Object) : boolean </font></td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.JsonSerializer<T>
	c57988 [label=<<table title="org.codehaus.jackson.map.JsonSerializer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/JsonSerializer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JsonSerializer&lt;T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + serialize(arg0 : T, arg1 : JsonGenerator, arg2 : SerializerProvider) </font></td></tr>
<tr><td align="left" balign="left"> + serializeWithType(arg0 : T, arg1 : JsonGenerator, arg2 : SerializerProvider, arg3 : TypeSerializer) </td></tr>
<tr><td align="left" balign="left"> + handledType() : Class&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.SerializationConfig
	c57980 [label=<<table title="org.codehaus.jackson.map.SerializationConfig" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/SerializationConfig.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SerializationConfig </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + withFilters(arg0 : FilterProvider) : SerializationConfig </td></tr>
<tr><td align="left" balign="left"> + createUnshared(arg0 : TypeResolverBuilder&lt;?&gt;, arg1 : VisibilityChecker&lt;?&gt;, arg2 : SubtypeResolver, arg3 : FilterProvider) : SerializationConfig </td></tr>
<tr><td align="left" balign="left"> + fromAnnotations(arg0 : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + createUnshared(arg0 : TypeResolverBuilder&lt;?&gt;, arg1 : VisibilityChecker&lt;?&gt;, arg2 : SubtypeResolver) : SerializationConfig </td></tr>
<tr><td align="left" balign="left"> + setIntrospector(arg0 : ClassIntrospector&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getAnnotationIntrospector() : AnnotationIntrospector </td></tr>
<tr><td align="left" balign="left"> + setAnnotationIntrospector(arg0 : AnnotationIntrospector) </td></tr>
<tr><td align="left" balign="left"> + insertAnnotationIntrospector(arg0 : AnnotationIntrospector) </td></tr>
<tr><td align="left" balign="left"> + appendAnnotationIntrospector(arg0 : AnnotationIntrospector) </td></tr>
<tr><td align="left" balign="left"> + setMixInAnnotations(arg0 : Map&lt;Class&lt;?&gt;, Class&lt;?&gt;&gt;) </td></tr>
<tr><td align="left" balign="left"> + addMixInAnnotations(arg0 : Class&lt;?&gt;, arg1 : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + findMixInClassFor(arg0 : Class&lt;?&gt;) : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDateFormat() : DateFormat </td></tr>
<tr><td align="left" balign="left"> + setDateFormat(arg0 : DateFormat) </td></tr>
<tr><td align="left" balign="left"> + getDefaultTyper(arg0 : JavaType) : TypeResolverBuilder&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getDefaultVisibilityChecker() : VisibilityChecker&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + introspectClassAnnotations(arg0 : Class&lt;?&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + introspectDirectClassAnnotations(arg0 : Class&lt;?&gt;) : T </td></tr>
<tr><td align="left" balign="left"> + enable(arg0 : SerializationConfig.Feature) </td></tr>
<tr><td align="left" balign="left"> + disable(arg0 : SerializationConfig.Feature) </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : SerializationConfig.Feature, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isEnabled(arg0 : SerializationConfig.Feature) : boolean </td></tr>
<tr><td align="left" balign="left"> + introspect(arg0 : JavaType) : T </td></tr>
<tr><td align="left" balign="left"> + getSubtypeResolver() : SubtypeResolver </td></tr>
<tr><td align="left" balign="left"> + setSubtypeResolver(arg0 : SubtypeResolver) </td></tr>
<tr><td align="left" balign="left"> + getSerializationView() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getSerializationInclusion() : JsonSerialize.Inclusion </td></tr>
<tr><td align="left" balign="left"> + setSerializationInclusion(arg0 : JsonSerialize.Inclusion) </td></tr>
<tr><td align="left" balign="left"> + setSerializationView(arg0 : Class&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + getFilterProvider() : FilterProvider </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.introspect.BasicBeanDescription
	c57986 [label=<<table title="org.codehaus.jackson.map.introspect.BasicBeanDescription" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/introspect/BasicBeanDescription.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BasicBeanDescription </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + hasKnownClassAnnotations() : boolean </td></tr>
<tr><td align="left" balign="left"> + getClassAnnotations() : Annotations </td></tr>
<tr><td align="left" balign="left"> + bindingsForBeanType() : TypeBindings </td></tr>
<tr><td align="left" balign="left"> + getClassInfo() : AnnotatedClass </td></tr>
<tr><td align="left" balign="left"> + findMethod(arg0 : String, arg1 : Class&lt;?&gt;[]) : AnnotatedMethod </td></tr>
<tr><td align="left" balign="left"> + instantiateBean(arg0 : boolean) : Object </td></tr>
<tr><td align="left" balign="left"> + findGetters(arg0 : VisibilityChecker&lt;?&gt;, arg1 : Collection&lt;String&gt;) : LinkedHashMap&lt;String, AnnotatedMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + findJsonValueMethod() : AnnotatedMethod </td></tr>
<tr><td align="left" balign="left"> + findDefaultConstructor() : Constructor&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getConstructors() : List&lt;AnnotatedConstructor&gt; </td></tr>
<tr><td align="left" balign="left"> + getFactoryMethods() : List&lt;AnnotatedMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + findSingleArgConstructor(arg0 : Class&lt;?&gt;[]) : Constructor&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + findFactoryMethod(arg0 : Class&lt;?&gt;[]) : Method </td></tr>
<tr><td align="left" balign="left"> + findCreatorPropertyNames() : List&lt;String&gt; </td></tr>
<tr><td align="left" balign="left"> + findSerializableFields(arg0 : VisibilityChecker&lt;?&gt;, arg1 : Collection&lt;String&gt;) : LinkedHashMap&lt;String, AnnotatedField&gt; </td></tr>
<tr><td align="left" balign="left"> + findSerializationInclusion(arg0 : JsonSerialize.Inclusion) : JsonSerialize.Inclusion </td></tr>
<tr><td align="left" balign="left"> + findSetters(arg0 : VisibilityChecker&lt;?&gt;) : LinkedHashMap&lt;String, AnnotatedMethod&gt; </td></tr>
<tr><td align="left" balign="left"> + findAnySetter() : AnnotatedMethod </td></tr>
<tr><td align="left" balign="left"> + findAnyGetter() : AnnotatedMethod </td></tr>
<tr><td align="left" balign="left"> + findBackReferenceProperties() : Map&lt;String, AnnotatedMember&gt; </td></tr>
<tr><td align="left" balign="left"> + findDeserializableFields(arg0 : VisibilityChecker&lt;?&gt;, arg1 : Collection&lt;String&gt;) : LinkedHashMap&lt;String, AnnotatedField&gt; </td></tr>
<tr><td align="left" balign="left"> + okNameForAnyGetter(arg0 : AnnotatedMethod, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + okNameForGetter(arg0 : AnnotatedMethod, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + okNameForIsGetter(arg0 : AnnotatedMethod, arg1 : String) : String </td></tr>
<tr><td align="left" balign="left"> + okNameForSetter(arg0 : AnnotatedMethod) : String </td></tr>
<tr><td align="left" balign="left"> + _findPropertyFields(arg0 : VisibilityChecker&lt;?&gt;, arg1 : Collection&lt;String&gt;, arg2 : boolean) : LinkedHashMap&lt;String, AnnotatedField&gt; </td></tr>
<tr><td align="left" balign="left"> + manglePropertyName(arg0 : String) : String </td></tr>
<tr><td align="left" balign="left"> + descFor(arg0 : AnnotatedElement) : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.ser.BeanSerializerFactory
	c57970 [label=<<table title="org.codehaus.jackson.map.ser.BeanSerializerFactory" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/ser/BeanSerializerFactory.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> BeanSerializerFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + instance : BeanSerializerFactory </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getConfig() : SerializerFactory.Config </td></tr>
<tr><td align="left" balign="left"> + withConfig(arg0 : SerializerFactory.Config) : SerializerFactory </td></tr>
<tr><td align="left" balign="left"> + createSerializer(arg0 : SerializationConfig, arg1 : JavaType, arg2 : BeanProperty) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + findBeanSerializer(arg0 : SerializationConfig, arg1 : JavaType, arg2 : BasicBeanDescription, arg3 : BeanProperty) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + findPropertyTypeSerializer(arg0 : JavaType, arg1 : SerializationConfig, arg2 : AnnotatedMember, arg3 : BeanProperty) : TypeSerializer </td></tr>
<tr><td align="left" balign="left"> + findPropertyContentTypeSerializer(arg0 : JavaType, arg1 : SerializationConfig, arg2 : AnnotatedMember, arg3 : BeanProperty) : TypeSerializer </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.BeanProperty
	c57987 [label=<<table title="org.codehaus.jackson.map.BeanProperty" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/BeanProperty.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BeanProperty </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getType() : JavaType </td></tr>
<tr><td align="left" balign="left"> + getAnnotation(arg0 : Class&lt;A&gt;) : A </td></tr>
<tr><td align="left" balign="left"> + getContextAnnotation(arg0 : Class&lt;A&gt;) : A </td></tr>
<tr><td align="left" balign="left"> + getMember() : AnnotatedMember </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

