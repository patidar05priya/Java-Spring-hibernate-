#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.service.IEmailNotificationsService
	c29853 [label=<<table title="com.inn.headstartdemo.service.IEmailNotificationsService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IEmailNotificationsService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IEmailNotificationsService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createNotification(text : String, string : String, anEntity : Users, subject : String) </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.service.generic.AbstractService<Pk, Entity>
	c29863 [label=<<table title="com.inn.headstartdemo.service.generic.AbstractService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../generic/AbstractService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractService&lt;Pk, Entity&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getDao() : IGenericDao&lt;Pk, Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + setDao(dao : IGenericDao&lt;Pk, Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + advanceSearch(queryObject : QueryObject) : AdvanceSearchResult&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(entity : Entity) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findById(primaryKey : Pk) : Entity </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + create(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + update(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + remove(anEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + removeById(primaryKey : Pk) </td></tr>
<tr><td align="left" balign="left"> + searchWithLimit(ctx : SearchContext, maxLimit : Integer, minLimit : Integer) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + searchWithLimitAndOrderBy(ctx : SearchContext, maxLimit : Integer, minLimit : Integer, orderby : String, orderType : String) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAudit(pk : Pk) : List&lt;JSONObject&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl
	c29867 [label=<<table title="com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./EmailNotificationsServiceImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EmailNotificationsServiceImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setDao(dao : IEmailNotificationsDao) </td></tr>
<tr><td align="left" balign="left"> + search(emailNotifications : EmailNotifications) : List&lt;EmailNotifications&gt; </td></tr>
<tr><td align="left" balign="left"> + findById(primaryKey : Long) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;EmailNotifications&gt; </td></tr>
<tr><td align="left" balign="left"> + create(emailNotifications : EmailNotifications) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + update(emailNotifications : EmailNotifications) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + remove(emailNotifications : EmailNotifications) </td></tr>
<tr><td align="left" balign="left"> + removeById(primaryKey : Long) </td></tr>
<tr><td align="left" balign="left"> + createNotification(email : String, sendBy : String, emailNotifications : Users, subject : String) </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.model.EmailNotifications
	c29944 [label=<<table title="com.inn.headstartdemo.model.EmailNotifications" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../model/EmailNotifications.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EmailNotifications </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getSubject() : String </td></tr>
<tr><td align="left" balign="left"> + setSubject(subject : String) </td></tr>
<tr><td align="left" balign="left"> + getSentBy() : String </td></tr>
<tr><td align="left" balign="left"> + setSentBy(sentBy : String) </td></tr>
<tr><td align="left" balign="left"> + getSentTo() : Users </td></tr>
<tr><td align="left" balign="left"> + setSentTo(sentTo : Users) </td></tr>
<tr><td align="left" balign="left"> + getId() : Long </td></tr>
<tr><td align="left" balign="left"> + setId(id : Long) </td></tr>
<tr><td align="left" balign="left"> + getEmail() : String </td></tr>
<tr><td align="left" balign="left"> + setEmail(email : String) </td></tr>
<tr><td align="left" balign="left"> + getCreatedDate() : Date </td></tr>
<tr><td align="left" balign="left"> + setCreatedDate(createdDate : Date) </td></tr>
<tr><td align="left" balign="left"> + getCreatedTime() : Date </td></tr>
<tr><td align="left" balign="left"> + setCreatedTime(createdTime : Date) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.model.Users
	c29947 [label=<<table title="com.inn.headstartdemo.model.Users" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../model/Users.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Users </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getUserAddress() : Address </td></tr>
<tr><td align="left" balign="left"> + setUserAddress(userAddress : Address) </td></tr>
<tr><td align="left" balign="left"> + getRegisteredby() : Boolean </td></tr>
<tr><td align="left" balign="left"> + setRegisteredby(registeredby : Boolean) </td></tr>
<tr><td align="left" balign="left"> + setImageFile(imageFile : byte[]) </td></tr>
<tr><td align="left" balign="left"> + getImageFile() : byte[] </td></tr>
<tr><td align="left" balign="left"> + getModifiedTime() : Date </td></tr>
<tr><td align="left" balign="left"> + setModifiedTime(modifiedTime : Date) </td></tr>
<tr><td align="left" balign="left"> + getCreatedTime() : Date </td></tr>
<tr><td align="left" balign="left"> + setCreatedTime(createdTime : Date) </td></tr>
<tr><td align="left" balign="left"> + getEmail() : String </td></tr>
<tr><td align="left" balign="left"> + setEmail(email : String) </td></tr>
<tr><td align="left" balign="left"> + isEnabled() : Boolean </td></tr>
<tr><td align="left" balign="left"> + setEnabled(enabled : Boolean) </td></tr>
<tr><td align="left" balign="left"> + getFirstname() : String </td></tr>
<tr><td align="left" balign="left"> + setFirstname(firstname : String) </td></tr>
<tr><td align="left" balign="left"> + getLastname() : String </td></tr>
<tr><td align="left" balign="left"> + setLastname(lastname : String) </td></tr>
<tr><td align="left" balign="left"> + getPassword() : String </td></tr>
<tr><td align="left" balign="left"> + setPassword(password : String) </td></tr>
<tr><td align="left" balign="left"> + getRoles() : Set&lt;Roles&gt; </td></tr>
<tr><td align="left" balign="left"> + setRoles(roles : Set&lt;Roles&gt;) </td></tr>
<tr><td align="left" balign="left"> + getTelephone() : String </td></tr>
<tr><td align="left" balign="left"> + setTelephone(telephone : String) </td></tr>
<tr><td align="left" balign="left"> + getUserid() : Integer </td></tr>
<tr><td align="left" balign="left"> + setUserid(userid : Integer) </td></tr>
<tr><td align="left" balign="left"> + getUsername() : String </td></tr>
<tr><td align="left" balign="left"> + setUsername(username : String) </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + getLockStatus() : boolean </td></tr>
<tr><td align="left" balign="left"> + getIdentifier() : String </td></tr>
<tr><td align="left" balign="left"> + getActivationkey() : String </td></tr>
<tr><td align="left" balign="left"> + setActivationkey(activationkey : String) </td></tr>
<tr><td align="left" balign="left"> + getPrimaryKeyIdentifier() : String </td></tr>
<tr><td align="left" balign="left"> + getUserConfig() : UserConfig </td></tr>
<tr><td align="left" balign="left"> + setUserConfig(userConfig : UserConfig) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.IEmailNotificationsDao
	c29990 [label=<<table title="com.inn.headstartdemo.dao.IEmailNotificationsDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../dao/IEmailNotificationsDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IEmailNotificationsDao </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl extends com.inn.headstartdemo.service.generic.AbstractService<java.lang.Long, com.inn.headstartdemo.model.EmailNotifications>
	c29863:p -> c29867:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl implements com.inn.headstartdemo.service.IEmailNotificationsService
	c29853:p -> c29867:p [dir=back,arrowtail=empty,style=dashed];
	// com.inn.headstartdemo.service.generic.AbstractService<Pk, Entity> NAVASSOC org.slf4j.Logger
	c29863:p -> c30042:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl NAVASSOC org.slf4j.Logger
	c29867:p -> c30042:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl NAVASSOC com.inn.headstartdemo.dao.IEmailNotificationsDao
	c29867:p -> c29990:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.model.EmailNotifications NAVASSOC com.inn.headstartdemo.model.Users
	c29944:p -> c29947:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.IEmailNotificationsService DEPEND com.inn.headstartdemo.model.Users
	c29853:p -> c29947:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl DEPEND com.inn.headstartdemo.model.Users
	c29867:p -> c29947:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl DEPEND com.inn.headstartdemo.dao.IEmailNotificationsDao
	c29867:p -> c29990:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.service.impl.EmailNotificationsServiceImpl DEPEND com.inn.headstartdemo.model.EmailNotifications
	c29867:p -> c29944:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.slf4j.Logger
	c30042 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

