#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.service.IProductService
	c29586 [label=<<table title="com.inn.headstartdemo.service.IProductService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IProductService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IProductService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.service.IElasticSearchService
	c29593 [label=<<table title="com.inn.headstartdemo.service.IElasticSearchService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IElasticSearchService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IElasticSearchService </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + searchIndex(term : String, type : String, i : int, j : int) : String </td></tr>
<tr><td align="left" balign="left"> + createIndex(id : String, name : String, type : String) </td></tr>
<tr><td align="left" balign="left"> + updateDocument(type : String, id : String, field : String, newValue : String) </td></tr>
<tr><td align="left" balign="left"> + deleteDocument(type : String, id : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.service.generic.AbstractService<Pk, Entity>
	c29607 [label=<<table title="com.inn.headstartdemo.service.generic.AbstractService" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../generic/AbstractService.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractService&lt;Pk, Entity&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getDao() : IGenericDao&lt;Pk, Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + setDao(dao : IGenericDao&lt;Pk, Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + advanceSearch(queryObject : QueryObject) : AdvanceSearchResult&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(entity : Entity) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findById(primaryKey : Pk) : Entity </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + create(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + update(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + remove(anEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + removeById(primaryKey : Pk) </td></tr>
<tr><td align="left" balign="left"> + searchWithLimit(ctx : SearchContext, maxLimit : Integer, minLimit : Integer) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + searchWithLimitAndOrderBy(ctx : SearchContext, maxLimit : Integer, minLimit : Integer, orderby : String, orderType : String) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAudit(pk : Pk) : List&lt;JSONObject&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl
	c29610 [label=<<table title="com.inn.headstartdemo.service.impl.ProductServiceImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./ProductServiceImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProductServiceImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setDao(dao : IProductDao) </td></tr>
<tr><td align="left" balign="left"> + search(product : Product) : List&lt;Product&gt; </td></tr>
<tr><td align="left" balign="left"> + findById(primaryKey : Integer) : Product </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Product&gt; </td></tr>
<tr><td align="left" balign="left"> + create(product : Product) : Product </td></tr>
<tr><td align="left" balign="left"> + update(product : Product) : Product </td></tr>
<tr><td align="left" balign="left"> + remove(product : Product) </td></tr>
<tr><td align="left" balign="left"> + removeById(primaryKey : Integer) </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.model.Product
	c29677 [label=<<table title="com.inn.headstartdemo.model.Product" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../model/Product.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Product </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getBuyPrice() : Double </td></tr>
<tr><td align="left" balign="left"> + setBuyPrice(buyPrice : Double) </td></tr>
<tr><td align="left" balign="left"> + getProductCode() : Integer </td></tr>
<tr><td align="left" balign="left"> + setProductCode(productCode : Integer) </td></tr>
<tr><td align="left" balign="left"> + getProductDescription() : String </td></tr>
<tr><td align="left" balign="left"> + setProductDescription(productDescription : String) </td></tr>
<tr><td align="left" balign="left"> + getProductName() : String </td></tr>
<tr><td align="left" balign="left"> + setProductName(productName : String) </td></tr>
<tr><td align="left" balign="left"> + getProductVendor() : String </td></tr>
<tr><td align="left" balign="left"> + setProductVendor(productVendor : String) </td></tr>
<tr><td align="left" balign="left"> + getProductline() : Product.Productline </td></tr>
<tr><td align="left" balign="left"> + setProductline(productline : Product.Productline) </td></tr>
<tr><td align="left" balign="left"> + getQuantityInStock() : Integer </td></tr>
<tr><td align="left" balign="left"> + setQuantityInStock(quantityInStock : Integer) </td></tr>
<tr><td align="left" balign="left"> + getSellPrice() : Double </td></tr>
<tr><td align="left" balign="left"> + setSellPrice(sellPrice : Double) </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + hashCode() : int </td></tr>
<tr><td align="left" balign="left"> + getPrimaryKeyIdentifier() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.IProductDao
	c29739 [label=<<table title="com.inn.headstartdemo.dao.IProductDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../dao/IProductDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IProductDao </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.service.impl.ProductServiceImpl extends com.inn.headstartdemo.service.generic.AbstractService<java.lang.Integer, com.inn.headstartdemo.model.Product>
	c29607:p -> c29610:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.service.impl.ProductServiceImpl implements com.inn.headstartdemo.service.IProductService
	c29586:p -> c29610:p [dir=back,arrowtail=empty,style=dashed];
	// com.inn.headstartdemo.service.generic.AbstractService<Pk, Entity> NAVASSOC org.slf4j.Logger
	c29607:p -> c29786:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl NAVASSOC org.slf4j.Logger
	c29610:p -> c29786:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl NAVASSOC com.inn.headstartdemo.dao.IProductDao
	c29610:p -> c29739:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl NAVASSOC com.inn.headstartdemo.service.IElasticSearchService
	c29610:p -> c29593:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl DEPEND com.inn.headstartdemo.dao.IProductDao
	c29610:p -> c29739:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.service.impl.ProductServiceImpl DEPEND com.inn.headstartdemo.model.Product
	c29610:p -> c29677:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.slf4j.Logger
	c29786 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

