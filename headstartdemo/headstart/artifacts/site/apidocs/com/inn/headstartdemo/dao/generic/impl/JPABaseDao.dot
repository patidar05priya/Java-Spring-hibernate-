#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.utils.QueryObject.SortOrder
	c66119 [label=<<table title="com.inn.headstartdemo.utils.QueryObject.SortOrder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../../utils/QueryObject.SortOrder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;enumeration&#187; </td></tr>
<tr><td align="center" balign="center"> SortOrder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ASC </td></tr>
<tr><td align="left" balign="left"> DESC </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.generic.AbstractBaseDao<Pk, Entity>
	c66158 [label=<<table title="com.inn.headstartdemo.dao.generic.AbstractBaseDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../AbstractBaseDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractBaseDao&lt;Pk, Entity&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + find(queryObject : QueryObject) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + count(queryObject : QueryObject) : int </td></tr>
<tr><td align="left" balign="left"> + getType() : Class&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + setType(type : Class&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + getCriteriaBuilder() : IQueryCriteriaBuilder&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + getQueryExecutor() : IQueryExecutor&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + setCriteriaBuilder(criteriaBuilder : IQueryCriteriaBuilder&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + setQueryExecutor(queryExecutor : IQueryExecutor&lt;Entity&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity>
	c66160 [label=<<table title="com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./HibernateGenericDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HibernateGenericDao&lt;Pk, Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IDENTIFIER_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + USERNAME_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + MODIFCATIONTIME_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + MODIFIEDBY_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + CHANGES : String </td></tr>
<tr><td align="left" balign="left"> + CHANGED_BY : String </td></tr>
<tr><td align="left" balign="left"> + CHANGED_ON : String </td></tr>
<tr><td align="left" balign="left"> + GET : String </td></tr>
<tr><td align="left" balign="left"> + SET : String </td></tr>
<tr><td align="left" balign="left"> + CREATED_TIME : String </td></tr>
<tr><td align="left" balign="left"> + MODIFIED_TIME : String </td></tr>
<tr><td align="left" balign="left"> + CREATOR : String </td></tr>
<tr><td align="left" balign="left"> + LAST_MODIFIER : String </td></tr>
<tr><td align="left" balign="left"> + DOMAIN : String </td></tr>
<tr><td align="left" balign="left"> + DESC : String </td></tr>
<tr><td align="left" balign="left"> + ADMIN : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setCriteriaBuilder(criteriaBuilder : IQueryCriteriaBuilder&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + setQueryExecutor(queryExecutor : IQueryExecutor&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + findByExample(refEntity : Entity, excludeProperty : String[]) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer, orderby : String, orderType : String) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAudit(pk : Pk) : List&lt;JSONObject&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity>
	c66161 [label=<<table title="com.inn.headstartdemo.dao.generic.impl.JPABaseDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./JPABaseDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JPABaseDao&lt;Pk, Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getEntityManager() : EntityManager </td></tr>
<tr><td align="left" balign="left"> + setEntityManager(entityManager : EntityManager) </td></tr>
<tr><td align="left" balign="left"> + create(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + update(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + delete(anEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(entityPk : Pk) </td></tr>
<tr><td align="left" balign="left"> + contains(anEntity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + findByPk(entityPk : Pk) : Entity </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAll(order : String, sort : QueryObject.SortOrder) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllWithPagination(lowerLimit : int, upperLimit : int) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllWithPagination(lowerLimit : int, upperLimit : int, order : String, sort : QueryObject.SortOrder) : List&lt;Entity&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> extends com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity>
	c66161:p -> c66160:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity> extends com.inn.headstartdemo.dao.generic.AbstractBaseDao<Pk, Entity>
	c66158:p -> c66161:p [dir=back,arrowtail=empty];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> NAVASSOC org.slf4j.Logger
	c66160:p -> c66195:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity> NAVASSOC org.slf4j.Logger
	c66161:p -> c66195:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity> DEPEND com.inn.headstartdemo.utils.QueryObject.SortOrder
	c66161:p -> c66119:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.slf4j.Logger
	c66195 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

