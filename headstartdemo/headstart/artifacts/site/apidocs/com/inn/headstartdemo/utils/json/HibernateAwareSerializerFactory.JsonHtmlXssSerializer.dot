#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory.JsonHtmlXssSerializer
	c58180 [label=<<table title="com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory.JsonHtmlXssSerializer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HibernateAwareSerializerFactory.JsonHtmlXssSerializer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JsonHtmlXssSerializer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + serialize(value : Object, jsonGenerator : JsonGenerator, serializerProvider : SerializerProvider) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory.JsonHtmlXssSerializer extends org.codehaus.jackson.map.JsonSerializer<java.lang.Object>
	c58245:p -> c58180:p [dir=back,arrowtail=empty];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory.JsonHtmlXssSerializer DEPEND org.codehaus.jackson.JsonGenerator
	c58180:p -> c58251:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.utils.json.HibernateAwareSerializerFactory.JsonHtmlXssSerializer DEPEND org.codehaus.jackson.map.SerializerProvider
	c58180:p -> c58253:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.codehaus.jackson.JsonGenerator
	c58251 [label=<<table title="org.codehaus.jackson.JsonGenerator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/JsonGenerator.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JsonGenerator </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + version() : Version </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + enable(arg0 : JsonGenerator.Feature) : JsonGenerator </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + disable(arg0 : JsonGenerator.Feature) : JsonGenerator </font></td></tr>
<tr><td align="left" balign="left"> + configure(arg0 : JsonGenerator.Feature, arg1 : boolean) : JsonGenerator </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isEnabled(arg0 : JsonGenerator.Feature) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setCodec(arg0 : ObjectCodec) : JsonGenerator </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getCodec() : ObjectCodec </font></td></tr>
<tr><td align="left" balign="left"> + enableFeature(arg0 : JsonGenerator.Feature) </td></tr>
<tr><td align="left" balign="left"> + disableFeature(arg0 : JsonGenerator.Feature) </td></tr>
<tr><td align="left" balign="left"> + setFeature(arg0 : JsonGenerator.Feature, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isFeatureEnabled(arg0 : JsonGenerator.Feature) : boolean </td></tr>
<tr><td align="left" balign="left"> + setPrettyPrinter(arg0 : PrettyPrinter) : JsonGenerator </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + useDefaultPrettyPrinter() : JsonGenerator </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeStartArray() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeEndArray() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeStartObject() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeEndObject() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeFieldName(arg0 : String) </font></td></tr>
<tr><td align="left" balign="left"> + writeFieldName(arg0 : SerializedString) </td></tr>
<tr><td align="left" balign="left"> + writeFieldName(arg0 : SerializableString) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeString(arg0 : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeString(arg0 : char[], arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"> + writeString(arg0 : SerializableString) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRawUTF8String(arg0 : byte[], arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeUTF8String(arg0 : byte[], arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRaw(arg0 : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRaw(arg0 : String, arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRaw(arg0 : char[], arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRaw(arg0 : char) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRawValue(arg0 : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRawValue(arg0 : String, arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeRawValue(arg0 : char[], arg1 : int, arg2 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeBinary(arg0 : Base64Variant, arg1 : byte[], arg2 : int, arg3 : int) </font></td></tr>
<tr><td align="left" balign="left"> + writeBinary(arg0 : byte[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + writeBinary(arg0 : byte[]) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : BigInteger) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : double) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : float) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : BigDecimal) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNumber(arg0 : String) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeBoolean(arg0 : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeNull() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeObject(arg0 : Object) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + writeTree(arg0 : JsonNode) </font></td></tr>
<tr><td align="left" balign="left"> + writeStringField(arg0 : String, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + writeBooleanField(arg0 : String, arg1 : boolean) </td></tr>
<tr><td align="left" balign="left"> + writeNullField(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + writeNumberField(arg0 : String, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + writeNumberField(arg0 : String, arg1 : long) </td></tr>
<tr><td align="left" balign="left"> + writeNumberField(arg0 : String, arg1 : double) </td></tr>
<tr><td align="left" balign="left"> + writeNumberField(arg0 : String, arg1 : float) </td></tr>
<tr><td align="left" balign="left"> + writeNumberField(arg0 : String, arg1 : BigDecimal) </td></tr>
<tr><td align="left" balign="left"> + writeBinaryField(arg0 : String, arg1 : byte[]) </td></tr>
<tr><td align="left" balign="left"> + writeArrayFieldStart(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + writeObjectFieldStart(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + writeObjectField(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + copyCurrentEvent(arg0 : JsonParser) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + copyCurrentStructure(arg0 : JsonParser) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getOutputContext() : JsonStreamContext </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flush() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isClosed() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + close() </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.SerializerProvider
	c58253 [label=<<table title="org.codehaus.jackson.map.SerializerProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/SerializerProvider.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SerializerProvider </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + serializeValue(arg0 : SerializationConfig, arg1 : JsonGenerator, arg2 : Object, arg3 : SerializerFactory) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + serializeValue(arg0 : SerializationConfig, arg1 : JsonGenerator, arg2 : Object, arg3 : JavaType, arg4 : SerializerFactory) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + generateJsonSchema(arg0 : Class&lt;?&gt;, arg1 : SerializationConfig, arg2 : SerializerFactory) : JsonSchema </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + hasSerializerFor(arg0 : SerializationConfig, arg1 : Class&lt;?&gt;, arg2 : SerializerFactory) : boolean </font></td></tr>
<tr><td align="left" balign="left"> + getConfig() : SerializationConfig </td></tr>
<tr><td align="left" balign="left"> + isEnabled(arg0 : SerializationConfig.Feature) : boolean </td></tr>
<tr><td align="left" balign="left"> + getSerializationView() : Class&lt;?&gt; </td></tr>
<tr><td align="left" balign="left"> + getFilterProvider() : FilterProvider </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findValueSerializer(arg0 : Class&lt;?&gt;, arg1 : BeanProperty) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findValueSerializer(arg0 : JavaType, arg1 : BeanProperty) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findTypedValueSerializer(arg0 : Class&lt;?&gt;, arg1 : boolean, arg2 : BeanProperty) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + findTypedValueSerializer(arg0 : JavaType, arg1 : boolean, arg2 : BeanProperty) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getKeySerializer(arg0 : JavaType, arg1 : BeanProperty) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"> + findValueSerializer(arg0 : Class&lt;?&gt;) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + findValueSerializer(arg0 : JavaType) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + findTypedValueSerializer(arg0 : Class&lt;?&gt;, arg1 : boolean) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + findTypedValueSerializer(arg0 : JavaType, arg1 : boolean) : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"> + getKeySerializer() : JsonSerializer&lt;Object&gt; </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getNullKeySerializer() : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getNullValueSerializer() : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getUnknownTypeSerializer(arg0 : Class&lt;?&gt;) : JsonSerializer&lt;Object&gt; </font></td></tr>
<tr><td align="left" balign="left"> + defaultSerializeValue(arg0 : Object, arg1 : JsonGenerator) </td></tr>
<tr><td align="left" balign="left"> + defaultSerializeField(arg0 : String, arg1 : Object, arg2 : JsonGenerator) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + defaultSerializeDateValue(arg0 : long, arg1 : JsonGenerator) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + defaultSerializeDateValue(arg0 : Date, arg1 : JsonGenerator) </font></td></tr>
<tr><td align="left" balign="left"> + defaultSerializeNull(arg0 : JsonGenerator) </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + cachedSerializersCount() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flushCachedSerializers() </font></td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.codehaus.jackson.map.JsonSerializer<T>
	c58245 [label=<<table title="org.codehaus.jackson.map.JsonSerializer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/codehaus/jackson/map/JsonSerializer.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> JsonSerializer&lt;T&gt; </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + serialize(arg0 : T, arg1 : JsonGenerator, arg2 : SerializerProvider) </font></td></tr>
<tr><td align="left" balign="left"> + serializeWithType(arg0 : T, arg1 : JsonGenerator, arg2 : SerializerProvider, arg3 : TypeSerializer) </td></tr>
<tr><td align="left" balign="left"> + handledType() : Class&lt;T&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

