#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version 5.1 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	rankdir=LR;
	// com.inn.headstartdemo.dao.generic.IGenericDao<Pk, Entity>
	c65898 [label=<<table title="com.inn.headstartdemo.dao.generic.IGenericDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../IGenericDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IGenericDao&lt;Pk, Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + findByExample(refEntity : Entity, excludeProperty : String[]) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer, orderby : String, orderType : String) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAudit(pk : Pk) : List&lt;JSONObject&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity>
	c65901 [label=<<table title="com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" bgcolor="lemonChiffon" href="./HibernateGenericDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> HibernateGenericDao&lt;Pk, Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IDENTIFIER_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + USERNAME_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + MODIFCATIONTIME_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + MODIFIEDBY_METHOD : String </td></tr>
<tr><td align="left" balign="left"> + CHANGES : String </td></tr>
<tr><td align="left" balign="left"> + CHANGED_BY : String </td></tr>
<tr><td align="left" balign="left"> + CHANGED_ON : String </td></tr>
<tr><td align="left" balign="left"> + GET : String </td></tr>
<tr><td align="left" balign="left"> + SET : String </td></tr>
<tr><td align="left" balign="left"> + CREATED_TIME : String </td></tr>
<tr><td align="left" balign="left"> + MODIFIED_TIME : String </td></tr>
<tr><td align="left" balign="left"> + CREATOR : String </td></tr>
<tr><td align="left" balign="left"> + LAST_MODIFIER : String </td></tr>
<tr><td align="left" balign="left"> + DOMAIN : String </td></tr>
<tr><td align="left" balign="left"> + DESC : String </td></tr>
<tr><td align="left" balign="left"> + ADMIN : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + setCriteriaBuilder(criteriaBuilder : IQueryCriteriaBuilder&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + setQueryExecutor(queryExecutor : IQueryExecutor&lt;Entity&gt;) </td></tr>
<tr><td align="left" balign="left"> + findByExample(refEntity : Entity, excludeProperty : String[]) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer, orderby : String, orderType : String) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + search(ctx : SearchContext, maxLimit : Integer, minLimit : Integer) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAudit(pk : Pk) : List&lt;JSONObject&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity>
	c65902 [label=<<table title="com.inn.headstartdemo.dao.generic.impl.JPABaseDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="./JPABaseDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> JPABaseDao&lt;Pk, Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getEntityManager() : EntityManager </td></tr>
<tr><td align="left" balign="left"> + setEntityManager(entityManager : EntityManager) </td></tr>
<tr><td align="left" balign="left"> + create(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + update(anEntity : Entity) : Entity </td></tr>
<tr><td align="left" balign="left"> + delete(anEntity : Entity) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(entityPk : Pk) </td></tr>
<tr><td align="left" balign="left"> + contains(anEntity : Entity) : boolean </td></tr>
<tr><td align="left" balign="left"> + findByPk(entityPk : Pk) : Entity </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAll(order : String, sort : QueryObject.SortOrder) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllWithPagination(lowerLimit : int, upperLimit : int) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + findAllWithPagination(lowerLimit : int, upperLimit : int, order : String, sort : QueryObject.SortOrder) : List&lt;Entity&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder<Entity>
	c65903 [label=<<table title="com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../criteria/IQueryCriteriaBuilder.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IQueryCriteriaBuilder&lt;Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + buildCriteria(queryObject : QueryObject, entityClass : Class&lt;Entity&gt;) : Object </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.criteria.IQueryExecutor<Entity>
	c65904 [label=<<table title="com.inn.headstartdemo.dao.criteria.IQueryExecutor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../criteria/IQueryExecutor.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> IQueryExecutor&lt;Entity&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + select(criteria : Object) : List&lt;Entity&gt; </td></tr>
<tr><td align="left" balign="left"> + count(criteria : Object) : int </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.EmployeeDaoImpl
	c65909 [label=<<table title="com.inn.headstartdemo.dao.impl.EmployeeDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/EmployeeDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EmployeeDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(employee : Employee) : Employee </td></tr>
<tr><td align="left" balign="left"> + update(employee : Employee) : Employee </td></tr>
<tr><td align="left" balign="left"> + delete(employee : Employee) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Employee&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Employee </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.TokenDao
	c65910 [label=<<table title="com.inn.headstartdemo.dao.impl.TokenDao" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/TokenDao.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> TokenDao </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + createNewToken(token : Token) </td></tr>
<tr><td align="left" balign="left"> + updateToken(series : String, tokenValue : String, lastUsed : Date) </td></tr>
<tr><td align="left" balign="left"> + getTokenForSeries(seriesId : String) : Token </td></tr>
<tr><td align="left" balign="left"> + removeUserTokens(username : String) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.OrderdetailDaoImpl
	c65911 [label=<<table title="com.inn.headstartdemo.dao.impl.OrderdetailDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/OrderdetailDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OrderdetailDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(orderdetail : Orderdetail) : Orderdetail </td></tr>
<tr><td align="left" balign="left"> + update(orderdetail : Orderdetail) : Orderdetail </td></tr>
<tr><td align="left" balign="left"> + delete(orderdetail : Orderdetail) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Orderdetail&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Orderdetail </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.CustomerDaoImpl
	c65912 [label=<<table title="com.inn.headstartdemo.dao.impl.CustomerDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/CustomerDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CustomerDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(customer : Customer) : Customer </td></tr>
<tr><td align="left" balign="left"> + update(customer : Customer) : Customer </td></tr>
<tr><td align="left" balign="left"> + delete(customer : Customer) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Customer&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Customer </td></tr>
<tr><td align="left" balign="left"> + getFileCountsByEntity(integerPk : Integer) : Long </td></tr>
<tr><td align="left" balign="left"> + getCommentCountByEntity(integerPk : Integer) : Long </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.UsersDaoImpl
	c65913 [label=<<table title="com.inn.headstartdemo.dao.impl.UsersDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/UsersDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UsersDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(users : Users) : Users </td></tr>
<tr><td align="left" balign="left"> + update(users : Users) : Users </td></tr>
<tr><td align="left" balign="left"> + delete(users : Users) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(usersPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Users&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(usersPk : Integer) : Users </td></tr>
<tr><td align="left" balign="left"> + findByUserName(userdetails : String) : Users </td></tr>
<tr><td align="left" balign="left"> + findByUser(username : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + findByEmail(email : String) : Users </td></tr>
<tr><td align="left" balign="left"> + unLock(username : String) : Boolean </td></tr>
<tr><td align="left" balign="left"> + getordersorder_statusStatusPieChart() : List&lt;PieChart&gt; </td></tr>
<tr><td align="left" balign="left"> + getcustomerprioritystatusEnumPieChart() : List&lt;PieChart&gt; </td></tr>
<tr><td align="left" balign="left"> + getproductproductlineEnumPieChart() : List&lt;PieChart&gt; </td></tr>
<tr><td align="left" balign="left"> + getTrendBarChartForemployee() : BarChart </td></tr>
<tr><td align="left" balign="left"> + getTrendLineChartForpayment(trendType : String) : TrendChart </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.OrdersDaoImpl
	c65914 [label=<<table title="com.inn.headstartdemo.dao.impl.OrdersDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/OrdersDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OrdersDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(orders : Orders) : Orders </td></tr>
<tr><td align="left" balign="left"> + update(orders : Orders) : Orders </td></tr>
<tr><td align="left" balign="left"> + delete(orders : Orders) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Orders&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Orders </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.EmailNotificationsDaoImpl
	c65915 [label=<<table title="com.inn.headstartdemo.dao.impl.EmailNotificationsDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/EmailNotificationsDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EmailNotificationsDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(emailNotifications : EmailNotifications) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + update(emailNotifications : EmailNotifications) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + delete(emailNotifications : EmailNotifications) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(emailNotificationsPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;EmailNotifications&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(emailNotificationsPk : Long) : EmailNotifications </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.PermissionsDaoImpl
	c65916 [label=<<table title="com.inn.headstartdemo.dao.impl.PermissionsDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/PermissionsDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PermissionsDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(permission : Permissions) : Permissions </td></tr>
<tr><td align="left" balign="left"> + update(permission : Permissions) : Permissions </td></tr>
<tr><td align="left" balign="left"> + delete(permission : Permissions) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(permissionPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Permissions&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(permissionPk : Long) : Permissions </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.UserConfigDaoImpl
	c65917 [label=<<table title="com.inn.headstartdemo.dao.impl.UserConfigDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/UserConfigDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> UserConfigDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(userConfig : UserConfig) : UserConfig </td></tr>
<tr><td align="left" balign="left"> + update(userConfig : UserConfig) : UserConfig </td></tr>
<tr><td align="left" balign="left"> + delete(userConfig : UserConfig) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;UserConfig&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : UserConfig </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.ActivityStreamDaoImpl
	c65918 [label=<<table title="com.inn.headstartdemo.dao.impl.ActivityStreamDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/ActivityStreamDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ActivityStreamDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(activityStream : ActivityStream) : ActivityStream </td></tr>
<tr><td align="left" balign="left"> + update(activityStream : ActivityStream) : ActivityStream </td></tr>
<tr><td align="left" balign="left"> + delete(activityStream : ActivityStream) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(activityStreamPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;ActivityStream&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(activityStreamPk : Long) : ActivityStream </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.AuditDaoImpl
	c65919 [label=<<table title="com.inn.headstartdemo.dao.impl.AuditDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/AuditDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AuditDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(audit : Audit) : Audit </td></tr>
<tr><td align="left" balign="left"> + update(audit : Audit) : Audit </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Audit&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(auditPk : Long) : Audit </td></tr>
<tr><td align="left" balign="left"> + search(searchCriteria : JSONObject) : List&lt;Audit&gt; </td></tr>
<tr><td align="left" balign="left"> + getAudits() : List&lt;Audit&gt; </td></tr>
<tr><td align="left" balign="left"> + getAuditBySearchCriteria() : List&lt;Audit&gt; </td></tr>
<tr><td align="left" balign="left"> + getLoggedInUsers() : List&lt;Audit&gt; </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.PaymentDaoImpl
	c65921 [label=<<table title="com.inn.headstartdemo.dao.impl.PaymentDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/PaymentDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PaymentDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(payment : Payment) : Payment </td></tr>
<tr><td align="left" balign="left"> + update(payment : Payment) : Payment </td></tr>
<tr><td align="left" balign="left"> + delete(payment : Payment) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(longPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Payment&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(longPk : Long) : Payment </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.ProductDaoImpl
	c65922 [label=<<table title="com.inn.headstartdemo.dao.impl.ProductDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/ProductDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ProductDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(product : Product) : Product </td></tr>
<tr><td align="left" balign="left"> + update(product : Product) : Product </td></tr>
<tr><td align="left" balign="left"> + delete(product : Product) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Product&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Product </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.RolesDaoImpl
	c65923 [label=<<table title="com.inn.headstartdemo.dao.impl.RolesDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/RolesDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RolesDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(roles : Roles) : Roles </td></tr>
<tr><td align="left" balign="left"> + update(roles : Roles) : Roles </td></tr>
<tr><td align="left" balign="left"> + delete(roles : Roles) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(rolesPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Roles&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(rolesPk : Long) : Roles </td></tr>
<tr><td align="left" balign="left"> + getRolesByUserId(userId : Integer) : List&lt;Roles&gt; </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
<tr><td align="left" balign="left"> + getRolesByRolename(rolename : String) : List&lt;Roles&gt; </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.OfficeDaoImpl
	c65924 [label=<<table title="com.inn.headstartdemo.dao.impl.OfficeDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/OfficeDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OfficeDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(office : Office) : Office </td></tr>
<tr><td align="left" balign="left"> + update(office : Office) : Office </td></tr>
<tr><td align="left" balign="left"> + delete(office : Office) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Office&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : Office </td></tr>
<tr><td align="left" balign="left"> + getCommentCountByEntity(integerPk : Integer) : Long </td></tr>
<tr><td align="left" balign="left"> + getTotalCount() : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.CommentDaoImpl
	c65925 [label=<<table title="com.inn.headstartdemo.dao.impl.CommentDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/CommentDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CommentDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(comment : Comment) : Comment </td></tr>
<tr><td align="left" balign="left"> + update(comment : Comment) : Comment </td></tr>
<tr><td align="left" balign="left"> + delete(comment : Comment) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(commentPk : Long) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Comment&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(commentPk : Long) : Comment </td></tr>
<tr><td align="left" balign="left"> + customerCommentCount(customer : Customer) : Long </td></tr>
<tr><td align="left" balign="left"> + officeCommentCount(office : Office) : Long </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.FileUploadsDaoImpl
	c65926 [label=<<table title="com.inn.headstartdemo.dao.impl.FileUploadsDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/FileUploadsDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FileUploadsDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(anEntity : FileUploads) : FileUploads </td></tr>
<tr><td align="left" balign="left"> + update(anEntity : FileUploads) : FileUploads </td></tr>
<tr><td align="left" balign="left"> + delete(anEntity : FileUploads) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(entityPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;FileUploads&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(entityPk : Integer) : FileUploads </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.AddressDaoImpl
	c65927 [label=<<table title="com.inn.headstartdemo.dao.impl.AddressDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/AddressDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AddressDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(address : Address) : Address </td></tr>
<tr><td align="left" balign="left"> + update(address : Address) : Address </td></tr>
<tr><td align="left" balign="left"> + delete(address : Address) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(addressPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;Address&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(addressPk : Integer) : Address </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.CustomerAttachDaoImpl
	c65928 [label=<<table title="com.inn.headstartdemo.dao.impl.CustomerAttachDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/CustomerAttachDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CustomerAttachDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(customerAttach : CustomerAttach) : CustomerAttach </td></tr>
<tr><td align="left" balign="left"> + update(customerAttach : CustomerAttach) : CustomerAttach </td></tr>
<tr><td align="left" balign="left"> + delete(customerAttach : CustomerAttach) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(integerPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;CustomerAttach&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(integerPk : Integer) : CustomerAttach </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// com.inn.headstartdemo.dao.impl.SocialCredentialsDaoImpl
	c65929 [label=<<table title="com.inn.headstartdemo.dao.impl.SocialCredentialsDaoImpl" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="../../impl/SocialCredentialsDaoImpl.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SocialCredentialsDaoImpl </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + create(socialCredentials : SocialCredentials) : SocialCredentials </td></tr>
<tr><td align="left" balign="left"> + update(socialCredentials : SocialCredentials) : SocialCredentials </td></tr>
<tr><td align="left" balign="left"> + delete(socialCredentials : SocialCredentials) </td></tr>
<tr><td align="left" balign="left"> + deleteByPk(socialCredentialsPk : Integer) </td></tr>
<tr><td align="left" balign="left"> + findAll() : List&lt;SocialCredentials&gt; </td></tr>
<tr><td align="left" balign="left"> + findByPk(socialCredentialsPk : Integer) : SocialCredentials </td></tr>
<tr><td align="left" balign="left"> + findByFacebookID(id : String) : List&lt;SocialCredentials&gt; </td></tr>
<tr><td align="left" balign="left"> + findByGoogleID(id : String) : List&lt;SocialCredentials&gt; </td></tr>
<tr><td align="left" balign="left"> + findByUserId(id : Integer) : SocialCredentials </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> extends com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity>
	c65902:p -> c65901:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> implements com.inn.headstartdemo.dao.generic.IGenericDao<Pk, Entity>
	c65898:p -> c65901:p [dir=back,arrowtail=empty,style=dashed];
	//com.inn.headstartdemo.dao.impl.EmployeeDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Employee>
	c65901:p -> c65909:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.TokenDao extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Token>
	c65901:p -> c65910:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.OrderdetailDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Orderdetail>
	c65901:p -> c65911:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.CustomerDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Customer>
	c65901:p -> c65912:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.UsersDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Users>
	c65901:p -> c65913:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.OrdersDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Orders>
	c65901:p -> c65914:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.EmailNotificationsDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.EmailNotifications>
	c65901:p -> c65915:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.PermissionsDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.Permissions>
	c65901:p -> c65916:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.UserConfigDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.UserConfig>
	c65901:p -> c65917:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.ActivityStreamDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.ActivityStream>
	c65901:p -> c65918:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.AuditDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.Audit>
	c65901:p -> c65919:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.PaymentDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.Payment>
	c65901:p -> c65921:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.ProductDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Product>
	c65901:p -> c65922:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.RolesDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.Roles>
	c65901:p -> c65923:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.OfficeDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Office>
	c65901:p -> c65924:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.CommentDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Long, com.inn.headstartdemo.model.Comment>
	c65901:p -> c65925:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.FileUploadsDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.FileUploads>
	c65901:p -> c65926:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.AddressDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.Address>
	c65901:p -> c65927:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.CustomerAttachDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.CustomerAttach>
	c65901:p -> c65928:p [dir=back,arrowtail=empty];
	//com.inn.headstartdemo.dao.impl.SocialCredentialsDaoImpl extends com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<java.lang.Integer, com.inn.headstartdemo.model.SocialCredentials>
	c65901:p -> c65929:p [dir=back,arrowtail=empty];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> NAVASSOC org.slf4j.Logger
	c65901:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.generic.impl.JPABaseDao<Pk, Entity> NAVASSOC org.slf4j.Logger
	c65902:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.EmployeeDaoImpl NAVASSOC org.slf4j.Logger
	c65909:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.TokenDao NAVASSOC org.slf4j.Logger
	c65910:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.OrderdetailDaoImpl NAVASSOC org.slf4j.Logger
	c65911:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.CustomerDaoImpl NAVASSOC org.slf4j.Logger
	c65912:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.UsersDaoImpl NAVASSOC org.slf4j.Logger
	c65913:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.OrdersDaoImpl NAVASSOC org.slf4j.Logger
	c65914:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.EmailNotificationsDaoImpl NAVASSOC org.slf4j.Logger
	c65915:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.PermissionsDaoImpl NAVASSOC org.slf4j.Logger
	c65916:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.UserConfigDaoImpl NAVASSOC org.slf4j.Logger
	c65917:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.AuditDaoImpl NAVASSOC org.slf4j.Logger
	c65919:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.PaymentDaoImpl NAVASSOC org.slf4j.Logger
	c65921:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.ProductDaoImpl NAVASSOC org.slf4j.Logger
	c65922:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.RolesDaoImpl NAVASSOC org.slf4j.Logger
	c65923:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.OfficeDaoImpl NAVASSOC org.slf4j.Logger
	c65924:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.AddressDaoImpl NAVASSOC org.slf4j.Logger
	c65927:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.impl.SocialCredentialsDaoImpl NAVASSOC org.slf4j.Logger
	c65929:p -> c65936:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open];
	// com.inn.headstartdemo.dao.generic.IGenericDao<Pk, Entity> DEPEND org.apache.cxf.jaxrs.ext.search.SearchContext
	c65898:p -> c65937:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> DEPEND com.inn.headstartdemo.dao.criteria.IQueryExecutor<Entity>
	c65901:p -> c65904:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> DEPEND org.apache.cxf.jaxrs.ext.search.SearchCondition<T>
	c65901:p -> c65938:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> DEPEND org.apache.cxf.jaxrs.ext.search.SearchContext
	c65901:p -> c65937:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> DEPEND com.inn.headstartdemo.dao.criteria.IQueryCriteriaBuilder<Entity>
	c65901:p -> c65903:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// com.inn.headstartdemo.dao.generic.impl.HibernateGenericDao<Pk, Entity> DEPEND org.hibernate.Criteria
	c65901:p -> c65939:p [taillabel="", label="", headlabel="", fontname="Helvetica", fontcolor="black", fontsize=10.0, color="black", arrowhead=open, style=dashed];
	// org.slf4j.Logger
	c65936 [label=<<table title="org.slf4j.Logger" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/slf4j/Logger.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Logger </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROOT_LOGGER_NAME : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isTraceEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + trace(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isDebugEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + debug(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isInfoEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + info(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isWarnEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + warn(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled() : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + isErrorEnabled(arg0 : Marker) : boolean </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object, arg3 : Object) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Object[]) </td></tr>
<tr><td align="left" balign="left"> + error(arg0 : Marker, arg1 : String, arg2 : Throwable) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.hibernate.Criteria
	c65939 [label=<<table title="org.hibernate.Criteria" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/hibernate/Criteria.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Criteria </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getAlias() : String </td></tr>
<tr><td align="left" balign="left"> + setProjection(arg0 : Projection) : Criteria </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + addOrder(arg0 : Order) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFetchMode(arg0 : String, arg1 : FetchMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setLockMode(arg0 : LockMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setLockMode(arg0 : String, arg1 : LockMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : JoinType, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createAlias(arg0 : String, arg1 : String, arg2 : int, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : JoinType) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : JoinType, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + createCriteria(arg0 : String, arg1 : String, arg2 : int, arg3 : Criterion) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setResultTransformer(arg0 : ResultTransformer) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setMaxResults(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFirstResult(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + isReadOnlyInitialized() : boolean </td></tr>
<tr><td align="left" balign="left"> + isReadOnly() : boolean </td></tr>
<tr><td align="left" balign="left"> + setReadOnly(arg0 : boolean) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFetchSize(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setTimeout(arg0 : int) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheable(arg0 : boolean) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheRegion(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setComment(arg0 : String) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setFlushMode(arg0 : FlushMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + setCacheMode(arg0 : CacheMode) : Criteria </td></tr>
<tr><td align="left" balign="left"> + list() : List&lt;&gt; </td></tr>
<tr><td align="left" balign="left"> + scroll() : ScrollableResults </td></tr>
<tr><td align="left" balign="left"> + scroll(arg0 : ScrollMode) : ScrollableResults </td></tr>
<tr><td align="left" balign="left"> + uniqueResult() : Object </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.apache.cxf.jaxrs.ext.search.SearchCondition<T>
	c65938 [label=<<table title="org.apache.cxf.jaxrs.ext.search.SearchCondition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/cxf/jaxrs/ext/search/SearchCondition.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SearchCondition&lt;T&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + isMet(arg0 : T) : boolean </td></tr>
<tr><td align="left" balign="left"> + findAll(arg0 : Collection&lt;T&gt;) : List&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition() : T </td></tr>
<tr><td align="left" balign="left"> + getStatement() : PrimitiveStatement </td></tr>
<tr><td align="left" balign="left"> + getSearchConditions() : List&lt;SearchCondition&lt;T&gt;&gt; </td></tr>
<tr><td align="left" balign="left"> + getConditionType() : ConditionType </td></tr>
<tr><td align="left" balign="left"> + accept(arg0 : SearchConditionVisitor&lt;T, ?&gt;) </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// org.apache.cxf.jaxrs.ext.search.SearchContext
	c65937 [label=<<table title="org.apache.cxf.jaxrs.ext.search.SearchContext" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/org/apache/cxf/jaxrs/ext/search/SearchContext.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SearchContext </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + getCondition(arg0 : Class&lt;T&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition(arg0 : Class&lt;T&gt;, arg1 : Map&lt;String, String&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition(arg0 : Class&lt;T&gt;, arg1 : Map&lt;String, String&gt;, arg2 : Map&lt;String, String&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition(arg0 : String, arg1 : Class&lt;T&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Map&lt;String, String&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getCondition(arg0 : String, arg1 : Class&lt;T&gt;, arg2 : Map&lt;String, String&gt;, arg3 : Map&lt;String, String&gt;) : SearchCondition&lt;T&gt; </td></tr>
<tr><td align="left" balign="left"> + getSearchExpression() : String </td></tr>
		</table></td></tr>
		</table>>, fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

